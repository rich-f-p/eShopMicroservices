// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductMicroservice.Infrastructure.Data;

#nullable disable

namespace ProductMicroservice.Infrastructure.Migrations
{
    [DbContext(typeof(ProductMicroserviceDbContext))]
    [Migration("20241111154229_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Category_Variation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Product_CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Variation_Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Product_CategoryId");

                    b.ToTable("Category_Variations");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Product_Image")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Parent_CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("Parent_Category_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Parent_CategoryId");

                    b.ToTable("product_Categories");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product_Variation_Values", b =>
                {
                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Variation_Value_Id")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Variation_ValueId")
                        .HasColumnType("int");

                    b.HasKey("Product_Id", "Variation_Value_Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Variation_ValueId");

                    b.ToTable("product_Variation_Values");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Variation_Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Category_VariationId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Variation_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Category_VariationId");

                    b.ToTable("Variation_Values");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Category_Variation", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Product_Category", "Product_Category")
                        .WithMany("category_Variations")
                        .HasForeignKey("Product_CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Product_Category");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Product_Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product_Category", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Product_Category", "Parent_Category")
                        .WithMany("Children")
                        .HasForeignKey("Parent_CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent_Category");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product_Variation_Values", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Product", "Product")
                        .WithMany("Product_Variation_Values")
                        .HasForeignKey("ProductId");

                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Variation_Value", "Variation_Value")
                        .WithMany("Variation_Values")
                        .HasForeignKey("Variation_ValueId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Product");

                    b.Navigation("Variation_Value");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Variation_Value", b =>
                {
                    b.HasOne("ProductMicroservice.ApplicationCore.Entities.Category_Variation", "Category_Variation")
                        .WithMany("Variation_Values")
                        .HasForeignKey("Category_VariationId");

                    b.Navigation("Category_Variation");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Category_Variation", b =>
                {
                    b.Navigation("Variation_Values");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product", b =>
                {
                    b.Navigation("Product_Variation_Values");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Product_Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Products");

                    b.Navigation("category_Variations");
                });

            modelBuilder.Entity("ProductMicroservice.ApplicationCore.Entities.Variation_Value", b =>
                {
                    b.Navigation("Variation_Values");
                });
#pragma warning restore 612, 618
        }
    }
}
